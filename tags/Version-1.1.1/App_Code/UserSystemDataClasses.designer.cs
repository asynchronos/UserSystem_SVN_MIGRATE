#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserSystemDataClasses
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="USER")]
	public partial class UserSystemDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTB_APPLICATION(TB_APPLICATION instance);
    partial void UpdateTB_APPLICATION(TB_APPLICATION instance);
    partial void DeleteTB_APPLICATION(TB_APPLICATION instance);
    partial void InsertTB_MENU(TB_MENU instance);
    partial void UpdateTB_MENU(TB_MENU instance);
    partial void DeleteTB_MENU(TB_MENU instance);
    partial void InsertTB_AUTHO_ACTION(TB_AUTHO_ACTION instance);
    partial void UpdateTB_AUTHO_ACTION(TB_AUTHO_ACTION instance);
    partial void DeleteTB_AUTHO_ACTION(TB_AUTHO_ACTION instance);
    partial void InsertTB_AUTHO_PAGE(TB_AUTHO_PAGE instance);
    partial void UpdateTB_AUTHO_PAGE(TB_AUTHO_PAGE instance);
    partial void DeleteTB_AUTHO_PAGE(TB_AUTHO_PAGE instance);
    partial void InsertTB_AUTHO_ROLE(TB_AUTHO_ROLE instance);
    partial void UpdateTB_AUTHO_ROLE(TB_AUTHO_ROLE instance);
    partial void DeleteTB_AUTHO_ROLE(TB_AUTHO_ROLE instance);
    partial void InsertTB_AUTHO_ROLE_CATEGORY(TB_AUTHO_ROLE_CATEGORY instance);
    partial void UpdateTB_AUTHO_ROLE_CATEGORY(TB_AUTHO_ROLE_CATEGORY instance);
    partial void DeleteTB_AUTHO_ROLE_CATEGORY(TB_AUTHO_ROLE_CATEGORY instance);
    partial void InsertTB_AUTHO_USER(TB_AUTHO_USER instance);
    partial void UpdateTB_AUTHO_USER(TB_AUTHO_USER instance);
    partial void DeleteTB_AUTHO_USER(TB_AUTHO_USER instance);
    partial void InsertTB_RELA_ROLE_CIF(TB_RELA_ROLE_CIF instance);
    partial void UpdateTB_RELA_ROLE_CIF(TB_RELA_ROLE_CIF instance);
    partial void DeleteTB_RELA_ROLE_CIF(TB_RELA_ROLE_CIF instance);
    partial void InsertTB_RELA_ROLE_EMP(TB_RELA_ROLE_EMP instance);
    partial void UpdateTB_RELA_ROLE_EMP(TB_RELA_ROLE_EMP instance);
    partial void DeleteTB_RELA_ROLE_EMP(TB_RELA_ROLE_EMP instance);
    partial void InsertTB_RELA_ROLE_MENU(TB_RELA_ROLE_MENU instance);
    partial void UpdateTB_RELA_ROLE_MENU(TB_RELA_ROLE_MENU instance);
    partial void DeleteTB_RELA_ROLE_MENU(TB_RELA_ROLE_MENU instance);
    partial void InsertTB_RELA_ROLE_PAGE_ACTION(TB_RELA_ROLE_PAGE_ACTION instance);
    partial void UpdateTB_RELA_ROLE_PAGE_ACTION(TB_RELA_ROLE_PAGE_ACTION instance);
    partial void DeleteTB_RELA_ROLE_PAGE_ACTION(TB_RELA_ROLE_PAGE_ACTION instance);
    partial void InsertTB_AUTHEN_APPLICATION(TB_AUTHEN_APPLICATION instance);
    partial void UpdateTB_AUTHEN_APPLICATION(TB_AUTHEN_APPLICATION instance);
    partial void DeleteTB_AUTHEN_APPLICATION(TB_AUTHEN_APPLICATION instance);
    #endregion
		
		public UserSystemDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["USERConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UserSystemDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserSystemDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserSystemDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserSystemDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TB_APPLICATION> TB_APPLICATIONs
		{
			get
			{
				return this.GetTable<TB_APPLICATION>();
			}
		}
		
		public System.Data.Linq.Table<TB_MENU> TB_MENUs
		{
			get
			{
				return this.GetTable<TB_MENU>();
			}
		}
		
		public System.Data.Linq.Table<TB_AUTHO_ACTION> TB_AUTHO_ACTIONs
		{
			get
			{
				return this.GetTable<TB_AUTHO_ACTION>();
			}
		}
		
		public System.Data.Linq.Table<TB_AUTHO_PAGE> TB_AUTHO_PAGEs
		{
			get
			{
				return this.GetTable<TB_AUTHO_PAGE>();
			}
		}
		
		public System.Data.Linq.Table<TB_AUTHO_ROLE> TB_AUTHO_ROLEs
		{
			get
			{
				return this.GetTable<TB_AUTHO_ROLE>();
			}
		}
		
		public System.Data.Linq.Table<TB_AUTHO_ROLE_CATEGORY> TB_AUTHO_ROLE_CATEGORies
		{
			get
			{
				return this.GetTable<TB_AUTHO_ROLE_CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<TB_AUTHO_USER> TB_AUTHO_USERs
		{
			get
			{
				return this.GetTable<TB_AUTHO_USER>();
			}
		}
		
		public System.Data.Linq.Table<V_RoleInCus_Mapping> V_RoleInCus_Mappings
		{
			get
			{
				return this.GetTable<V_RoleInCus_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<V_RoleInEmp_Mapping> V_RoleInEmp_Mappings
		{
			get
			{
				return this.GetTable<V_RoleInEmp_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<V_RoleInMenu_Mapping> V_RoleInMenu_Mappings
		{
			get
			{
				return this.GetTable<V_RoleInMenu_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<V_RoleInPageAndAction_Mapping> V_RoleInPageAndAction_Mappings
		{
			get
			{
				return this.GetTable<V_RoleInPageAndAction_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<V_RoleInApp_Mapping> V_RoleInApp_Mappings
		{
			get
			{
				return this.GetTable<V_RoleInApp_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<TB_RELA_ROLE_CIF> TB_RELA_ROLE_CIFs
		{
			get
			{
				return this.GetTable<TB_RELA_ROLE_CIF>();
			}
		}
		
		public System.Data.Linq.Table<TB_RELA_ROLE_EMP> TB_RELA_ROLE_EMPs
		{
			get
			{
				return this.GetTable<TB_RELA_ROLE_EMP>();
			}
		}
		
		public System.Data.Linq.Table<TB_RELA_ROLE_MENU> TB_RELA_ROLE_MENUs
		{
			get
			{
				return this.GetTable<TB_RELA_ROLE_MENU>();
			}
		}
		
		public System.Data.Linq.Table<TB_RELA_ROLE_PAGE_ACTION> TB_RELA_ROLE_PAGE_ACTIONs
		{
			get
			{
				return this.GetTable<TB_RELA_ROLE_PAGE_ACTION>();
			}
		}
		
		public System.Data.Linq.Table<TB_AUTHEN_APPLICATION> TB_AUTHEN_APPLICATIONs
		{
			get
			{
				return this.GetTable<TB_AUTHEN_APPLICATION>();
			}
		}
	}
	
	[Table(Name="dbo.TB_APPLICATION")]
	[DataContract()]
	public partial class TB_APPLICATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _APP_KEY;
		
		private string _APP_DESC;
		
		private System.Nullable<int> _PRIORITY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntitySet<TB_AUTHEN_APPLICATION> _TB_AUTHEN_APPLICATIONs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPP_KEYChanging(int value);
    partial void OnAPP_KEYChanged();
    partial void OnAPP_DESCChanging(string value);
    partial void OnAPP_DESCChanged();
    partial void OnPRIORITYChanging(System.Nullable<int> value);
    partial void OnPRIORITYChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_APPLICATION()
		{
			this.Initialize();
		}
		
		[Column(Storage="_APP_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int APP_KEY
		{
			get
			{
				return this._APP_KEY;
			}
			set
			{
				if ((this._APP_KEY != value))
				{
					this.OnAPP_KEYChanging(value);
					this.SendPropertyChanging();
					this._APP_KEY = value;
					this.SendPropertyChanged("APP_KEY");
					this.OnAPP_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_APP_DESC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string APP_DESC
		{
			get
			{
				return this._APP_DESC;
			}
			set
			{
				if ((this._APP_DESC != value))
				{
					this.OnAPP_DESCChanging(value);
					this.SendPropertyChanging();
					this._APP_DESC = value;
					this.SendPropertyChanged("APP_DESC");
					this.OnAPP_DESCChanged();
				}
			}
		}
		
		[Column(Storage="_PRIORITY", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> PRIORITY
		{
			get
			{
				return this._PRIORITY;
			}
			set
			{
				if ((this._PRIORITY != value))
				{
					this.OnPRIORITYChanging(value);
					this.SendPropertyChanging();
					this._PRIORITY = value;
					this.SendPropertyChanged("PRIORITY");
					this.OnPRIORITYChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_APPLICATION_TB_AUTHEN_APPLICATION", Storage="_TB_AUTHEN_APPLICATIONs", ThisKey="APP_KEY", OtherKey="APP_KEY")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<TB_AUTHEN_APPLICATION> TB_AUTHEN_APPLICATIONs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_AUTHEN_APPLICATIONs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_AUTHEN_APPLICATIONs;
			}
			set
			{
				this._TB_AUTHEN_APPLICATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_AUTHEN_APPLICATIONs(TB_AUTHEN_APPLICATION entity)
		{
			this.SendPropertyChanging();
			entity.TB_APPLICATION = this;
		}
		
		private void detach_TB_AUTHEN_APPLICATIONs(TB_AUTHEN_APPLICATION entity)
		{
			this.SendPropertyChanging();
			entity.TB_APPLICATION = null;
		}
		
		private void Initialize()
		{
			this._TB_AUTHEN_APPLICATIONs = new EntitySet<TB_AUTHEN_APPLICATION>(new Action<TB_AUTHEN_APPLICATION>(this.attach_TB_AUTHEN_APPLICATIONs), new Action<TB_AUTHEN_APPLICATION>(this.detach_TB_AUTHEN_APPLICATIONs));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TB_MENU")]
	[DataContract()]
	public partial class TB_MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MENU_KEY;
		
		private string _MENU_TITLE;
		
		private string _MENU_URL;
		
		private string _MENU_POPUP_OPT;
		
		private string _MENU_REL;
		
		private string _MENU_TOOLTIP;
		
		private System.Nullable<int> _MENU_PRIORITY;
		
		private System.Nullable<bool> _MENU_DEL_FLAG;
		
		private System.Nullable<int> _MENU_PARENT_KEY;
		
		private EntitySet<TB_MENU> _TB_MENUs;
		
		private EntitySet<TB_RELA_ROLE_MENU> _TB_RELA_ROLE_MENUs;
		
		private EntityRef<TB_MENU> _TB_MENU1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMENU_KEYChanging(int value);
    partial void OnMENU_KEYChanged();
    partial void OnMENU_TITLEChanging(string value);
    partial void OnMENU_TITLEChanged();
    partial void OnMENU_URLChanging(string value);
    partial void OnMENU_URLChanged();
    partial void OnMENU_POPUP_OPTChanging(string value);
    partial void OnMENU_POPUP_OPTChanged();
    partial void OnMENU_RELChanging(string value);
    partial void OnMENU_RELChanged();
    partial void OnMENU_TOOLTIPChanging(string value);
    partial void OnMENU_TOOLTIPChanged();
    partial void OnMENU_PRIORITYChanging(System.Nullable<int> value);
    partial void OnMENU_PRIORITYChanged();
    partial void OnMENU_DEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnMENU_DEL_FLAGChanged();
    partial void OnMENU_PARENT_KEYChanging(System.Nullable<int> value);
    partial void OnMENU_PARENT_KEYChanged();
    #endregion
		
		public TB_MENU()
		{
			this.Initialize();
		}
		
		[Column(Storage="_MENU_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int MENU_KEY
		{
			get
			{
				return this._MENU_KEY;
			}
			set
			{
				if ((this._MENU_KEY != value))
				{
					this.OnMENU_KEYChanging(value);
					this.SendPropertyChanging();
					this._MENU_KEY = value;
					this.SendPropertyChanged("MENU_KEY");
					this.OnMENU_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_MENU_TITLE", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string MENU_TITLE
		{
			get
			{
				return this._MENU_TITLE;
			}
			set
			{
				if ((this._MENU_TITLE != value))
				{
					this.OnMENU_TITLEChanging(value);
					this.SendPropertyChanging();
					this._MENU_TITLE = value;
					this.SendPropertyChanged("MENU_TITLE");
					this.OnMENU_TITLEChanged();
				}
			}
		}
		
		[Column(Storage="_MENU_URL", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string MENU_URL
		{
			get
			{
				return this._MENU_URL;
			}
			set
			{
				if ((this._MENU_URL != value))
				{
					this.OnMENU_URLChanging(value);
					this.SendPropertyChanging();
					this._MENU_URL = value;
					this.SendPropertyChanged("MENU_URL");
					this.OnMENU_URLChanged();
				}
			}
		}
		
		[Column(Storage="_MENU_POPUP_OPT", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string MENU_POPUP_OPT
		{
			get
			{
				return this._MENU_POPUP_OPT;
			}
			set
			{
				if ((this._MENU_POPUP_OPT != value))
				{
					this.OnMENU_POPUP_OPTChanging(value);
					this.SendPropertyChanging();
					this._MENU_POPUP_OPT = value;
					this.SendPropertyChanged("MENU_POPUP_OPT");
					this.OnMENU_POPUP_OPTChanged();
				}
			}
		}
		
		[Column(Storage="_MENU_REL", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string MENU_REL
		{
			get
			{
				return this._MENU_REL;
			}
			set
			{
				if ((this._MENU_REL != value))
				{
					this.OnMENU_RELChanging(value);
					this.SendPropertyChanging();
					this._MENU_REL = value;
					this.SendPropertyChanged("MENU_REL");
					this.OnMENU_RELChanged();
				}
			}
		}
		
		[Column(Storage="_MENU_TOOLTIP", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string MENU_TOOLTIP
		{
			get
			{
				return this._MENU_TOOLTIP;
			}
			set
			{
				if ((this._MENU_TOOLTIP != value))
				{
					this.OnMENU_TOOLTIPChanging(value);
					this.SendPropertyChanging();
					this._MENU_TOOLTIP = value;
					this.SendPropertyChanged("MENU_TOOLTIP");
					this.OnMENU_TOOLTIPChanged();
				}
			}
		}
		
		[Column(Storage="_MENU_PRIORITY", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> MENU_PRIORITY
		{
			get
			{
				return this._MENU_PRIORITY;
			}
			set
			{
				if ((this._MENU_PRIORITY != value))
				{
					this.OnMENU_PRIORITYChanging(value);
					this.SendPropertyChanging();
					this._MENU_PRIORITY = value;
					this.SendPropertyChanged("MENU_PRIORITY");
					this.OnMENU_PRIORITYChanged();
				}
			}
		}
		
		[Column(Storage="_MENU_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=8)]
		public System.Nullable<bool> MENU_DEL_FLAG
		{
			get
			{
				return this._MENU_DEL_FLAG;
			}
			set
			{
				if ((this._MENU_DEL_FLAG != value))
				{
					this.OnMENU_DEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._MENU_DEL_FLAG = value;
					this.SendPropertyChanged("MENU_DEL_FLAG");
					this.OnMENU_DEL_FLAGChanged();
				}
			}
		}
		
		[Column(Storage="_MENU_PARENT_KEY", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> MENU_PARENT_KEY
		{
			get
			{
				return this._MENU_PARENT_KEY;
			}
			set
			{
				if ((this._MENU_PARENT_KEY != value))
				{
					if (this._TB_MENU1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMENU_PARENT_KEYChanging(value);
					this.SendPropertyChanging();
					this._MENU_PARENT_KEY = value;
					this.SendPropertyChanged("MENU_PARENT_KEY");
					this.OnMENU_PARENT_KEYChanged();
				}
			}
		}
		
		[Association(Name="TB_MENU_TB_MENU", Storage="_TB_MENUs", ThisKey="MENU_KEY", OtherKey="MENU_PARENT_KEY")]
		[DataMember(Order=10, EmitDefaultValue=false)]
		public EntitySet<TB_MENU> TB_MENUs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_MENUs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_MENUs;
			}
			set
			{
				this._TB_MENUs.Assign(value);
			}
		}
		
		[Association(Name="TB_MENU_TB_RELA_ROLE_MENU", Storage="_TB_RELA_ROLE_MENUs", ThisKey="MENU_KEY", OtherKey="MENU_KEY")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<TB_RELA_ROLE_MENU> TB_RELA_ROLE_MENUs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_RELA_ROLE_MENUs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_RELA_ROLE_MENUs;
			}
			set
			{
				this._TB_RELA_ROLE_MENUs.Assign(value);
			}
		}
		
		[Association(Name="TB_MENU_TB_MENU", Storage="_TB_MENU1", ThisKey="MENU_PARENT_KEY", OtherKey="MENU_KEY", IsForeignKey=true)]
		public TB_MENU TB_MENU1
		{
			get
			{
				return this._TB_MENU1.Entity;
			}
			set
			{
				TB_MENU previousValue = this._TB_MENU1.Entity;
				if (((previousValue != value) 
							|| (this._TB_MENU1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_MENU1.Entity = null;
						previousValue.TB_MENUs.Remove(this);
					}
					this._TB_MENU1.Entity = value;
					if ((value != null))
					{
						value.TB_MENUs.Add(this);
						this._MENU_PARENT_KEY = value.MENU_KEY;
					}
					else
					{
						this._MENU_PARENT_KEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_MENU1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_MENUs(TB_MENU entity)
		{
			this.SendPropertyChanging();
			entity.TB_MENU1 = this;
		}
		
		private void detach_TB_MENUs(TB_MENU entity)
		{
			this.SendPropertyChanging();
			entity.TB_MENU1 = null;
		}
		
		private void attach_TB_RELA_ROLE_MENUs(TB_RELA_ROLE_MENU entity)
		{
			this.SendPropertyChanging();
			entity.TB_MENU = this;
		}
		
		private void detach_TB_RELA_ROLE_MENUs(TB_RELA_ROLE_MENU entity)
		{
			this.SendPropertyChanging();
			entity.TB_MENU = null;
		}
		
		private void Initialize()
		{
			this._TB_MENUs = new EntitySet<TB_MENU>(new Action<TB_MENU>(this.attach_TB_MENUs), new Action<TB_MENU>(this.detach_TB_MENUs));
			this._TB_RELA_ROLE_MENUs = new EntitySet<TB_RELA_ROLE_MENU>(new Action<TB_RELA_ROLE_MENU>(this.attach_TB_RELA_ROLE_MENUs), new Action<TB_RELA_ROLE_MENU>(this.detach_TB_RELA_ROLE_MENUs));
			this._TB_MENU1 = default(EntityRef<TB_MENU>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TB_AUTHO_ACTION")]
	[DataContract()]
	public partial class TB_AUTHO_ACTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ACTION_KEY;
		
		private string _ACTION_DESC;
		
		private System.Nullable<int> _PRIORITY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntitySet<TB_RELA_ROLE_PAGE_ACTION> _TB_RELA_ROLE_PAGE_ACTIONs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACTION_KEYChanging(int value);
    partial void OnACTION_KEYChanged();
    partial void OnACTION_DESCChanging(string value);
    partial void OnACTION_DESCChanged();
    partial void OnPRIORITYChanging(System.Nullable<int> value);
    partial void OnPRIORITYChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_AUTHO_ACTION()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ACTION_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ACTION_KEY
		{
			get
			{
				return this._ACTION_KEY;
			}
			set
			{
				if ((this._ACTION_KEY != value))
				{
					this.OnACTION_KEYChanging(value);
					this.SendPropertyChanging();
					this._ACTION_KEY = value;
					this.SendPropertyChanged("ACTION_KEY");
					this.OnACTION_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_ACTION_DESC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string ACTION_DESC
		{
			get
			{
				return this._ACTION_DESC;
			}
			set
			{
				if ((this._ACTION_DESC != value))
				{
					this.OnACTION_DESCChanging(value);
					this.SendPropertyChanging();
					this._ACTION_DESC = value;
					this.SendPropertyChanged("ACTION_DESC");
					this.OnACTION_DESCChanged();
				}
			}
		}
		
		[Column(Storage="_PRIORITY", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> PRIORITY
		{
			get
			{
				return this._PRIORITY;
			}
			set
			{
				if ((this._PRIORITY != value))
				{
					this.OnPRIORITYChanging(value);
					this.SendPropertyChanging();
					this._PRIORITY = value;
					this.SendPropertyChanged("PRIORITY");
					this.OnPRIORITYChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_AUTHO_ACTION_TB_RELA_ROLE_PAGE_ACTION", Storage="_TB_RELA_ROLE_PAGE_ACTIONs", ThisKey="ACTION_KEY", OtherKey="ACTION_KEY")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<TB_RELA_ROLE_PAGE_ACTION> TB_RELA_ROLE_PAGE_ACTIONs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_RELA_ROLE_PAGE_ACTIONs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_RELA_ROLE_PAGE_ACTIONs;
			}
			set
			{
				this._TB_RELA_ROLE_PAGE_ACTIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_RELA_ROLE_PAGE_ACTIONs(TB_RELA_ROLE_PAGE_ACTION entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ACTION = this;
		}
		
		private void detach_TB_RELA_ROLE_PAGE_ACTIONs(TB_RELA_ROLE_PAGE_ACTION entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ACTION = null;
		}
		
		private void Initialize()
		{
			this._TB_RELA_ROLE_PAGE_ACTIONs = new EntitySet<TB_RELA_ROLE_PAGE_ACTION>(new Action<TB_RELA_ROLE_PAGE_ACTION>(this.attach_TB_RELA_ROLE_PAGE_ACTIONs), new Action<TB_RELA_ROLE_PAGE_ACTION>(this.detach_TB_RELA_ROLE_PAGE_ACTIONs));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TB_AUTHO_PAGE")]
	[DataContract()]
	public partial class TB_AUTHO_PAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PAGE_KEY;
		
		private string _PAGE_DESC;
		
		private System.Nullable<int> _PRIORITY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntitySet<TB_RELA_ROLE_PAGE_ACTION> _TB_RELA_ROLE_PAGE_ACTIONs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAGE_KEYChanging(int value);
    partial void OnPAGE_KEYChanged();
    partial void OnPAGE_DESCChanging(string value);
    partial void OnPAGE_DESCChanged();
    partial void OnPRIORITYChanging(System.Nullable<int> value);
    partial void OnPRIORITYChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_AUTHO_PAGE()
		{
			this.Initialize();
		}
		
		[Column(Storage="_PAGE_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int PAGE_KEY
		{
			get
			{
				return this._PAGE_KEY;
			}
			set
			{
				if ((this._PAGE_KEY != value))
				{
					this.OnPAGE_KEYChanging(value);
					this.SendPropertyChanging();
					this._PAGE_KEY = value;
					this.SendPropertyChanged("PAGE_KEY");
					this.OnPAGE_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_PAGE_DESC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string PAGE_DESC
		{
			get
			{
				return this._PAGE_DESC;
			}
			set
			{
				if ((this._PAGE_DESC != value))
				{
					this.OnPAGE_DESCChanging(value);
					this.SendPropertyChanging();
					this._PAGE_DESC = value;
					this.SendPropertyChanged("PAGE_DESC");
					this.OnPAGE_DESCChanged();
				}
			}
		}
		
		[Column(Storage="_PRIORITY", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> PRIORITY
		{
			get
			{
				return this._PRIORITY;
			}
			set
			{
				if ((this._PRIORITY != value))
				{
					this.OnPRIORITYChanging(value);
					this.SendPropertyChanging();
					this._PRIORITY = value;
					this.SendPropertyChanged("PRIORITY");
					this.OnPRIORITYChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_AUTHO_PAGE_TB_RELA_ROLE_PAGE_ACTION", Storage="_TB_RELA_ROLE_PAGE_ACTIONs", ThisKey="PAGE_KEY", OtherKey="PAGE_KEY")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<TB_RELA_ROLE_PAGE_ACTION> TB_RELA_ROLE_PAGE_ACTIONs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_RELA_ROLE_PAGE_ACTIONs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_RELA_ROLE_PAGE_ACTIONs;
			}
			set
			{
				this._TB_RELA_ROLE_PAGE_ACTIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_RELA_ROLE_PAGE_ACTIONs(TB_RELA_ROLE_PAGE_ACTION entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_PAGE = this;
		}
		
		private void detach_TB_RELA_ROLE_PAGE_ACTIONs(TB_RELA_ROLE_PAGE_ACTION entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_PAGE = null;
		}
		
		private void Initialize()
		{
			this._TB_RELA_ROLE_PAGE_ACTIONs = new EntitySet<TB_RELA_ROLE_PAGE_ACTION>(new Action<TB_RELA_ROLE_PAGE_ACTION>(this.attach_TB_RELA_ROLE_PAGE_ACTIONs), new Action<TB_RELA_ROLE_PAGE_ACTION>(this.detach_TB_RELA_ROLE_PAGE_ACTIONs));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TB_AUTHO_ROLE")]
	[DataContract()]
	public partial class TB_AUTHO_ROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ROLE_KEY;
		
		private string _ROLE_DESC;
		
		private string _ROLE_VALUE;
		
		private int _ROLE_CATEGORY_KEY;
		
		private System.Nullable<int> _PRIORITY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntitySet<TB_RELA_ROLE_CIF> _TB_RELA_ROLE_CIFs;
		
		private EntitySet<TB_RELA_ROLE_EMP> _TB_RELA_ROLE_EMPs;
		
		private EntitySet<TB_RELA_ROLE_MENU> _TB_RELA_ROLE_MENUs;
		
		private EntitySet<TB_RELA_ROLE_PAGE_ACTION> _TB_RELA_ROLE_PAGE_ACTIONs;
		
		private EntitySet<TB_AUTHEN_APPLICATION> _TB_AUTHEN_APPLICATIONs;
		
		private EntityRef<TB_AUTHO_ROLE_CATEGORY> _TB_AUTHO_ROLE_CATEGORY;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROLE_KEYChanging(int value);
    partial void OnROLE_KEYChanged();
    partial void OnROLE_DESCChanging(string value);
    partial void OnROLE_DESCChanged();
    partial void OnROLE_VALUEChanging(string value);
    partial void OnROLE_VALUEChanged();
    partial void OnROLE_CATEGORY_KEYChanging(int value);
    partial void OnROLE_CATEGORY_KEYChanged();
    partial void OnPRIORITYChanging(System.Nullable<int> value);
    partial void OnPRIORITYChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_AUTHO_ROLE()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ROLE_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					this.OnROLE_KEYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_KEY = value;
					this.SendPropertyChanged("ROLE_KEY");
					this.OnROLE_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_DESC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string ROLE_DESC
		{
			get
			{
				return this._ROLE_DESC;
			}
			set
			{
				if ((this._ROLE_DESC != value))
				{
					this.OnROLE_DESCChanging(value);
					this.SendPropertyChanging();
					this._ROLE_DESC = value;
					this.SendPropertyChanged("ROLE_DESC");
					this.OnROLE_DESCChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_VALUE", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string ROLE_VALUE
		{
			get
			{
				return this._ROLE_VALUE;
			}
			set
			{
				if ((this._ROLE_VALUE != value))
				{
					this.OnROLE_VALUEChanging(value);
					this.SendPropertyChanging();
					this._ROLE_VALUE = value;
					this.SendPropertyChanged("ROLE_VALUE");
					this.OnROLE_VALUEChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_CATEGORY_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int ROLE_CATEGORY_KEY
		{
			get
			{
				return this._ROLE_CATEGORY_KEY;
			}
			set
			{
				if ((this._ROLE_CATEGORY_KEY != value))
				{
					if (this._TB_AUTHO_ROLE_CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLE_CATEGORY_KEYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_CATEGORY_KEY = value;
					this.SendPropertyChanged("ROLE_CATEGORY_KEY");
					this.OnROLE_CATEGORY_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_PRIORITY", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> PRIORITY
		{
			get
			{
				return this._PRIORITY;
			}
			set
			{
				if ((this._PRIORITY != value))
				{
					this.OnPRIORITYChanging(value);
					this.SendPropertyChanging();
					this._PRIORITY = value;
					this.SendPropertyChanged("PRIORITY");
					this.OnPRIORITYChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=6)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_RELA_ROLE_CIF", Storage="_TB_RELA_ROLE_CIFs", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<TB_RELA_ROLE_CIF> TB_RELA_ROLE_CIFs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_RELA_ROLE_CIFs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_RELA_ROLE_CIFs;
			}
			set
			{
				this._TB_RELA_ROLE_CIFs.Assign(value);
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_RELA_ROLE_EMP", Storage="_TB_RELA_ROLE_EMPs", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY")]
		[DataMember(Order=8, EmitDefaultValue=false)]
		public EntitySet<TB_RELA_ROLE_EMP> TB_RELA_ROLE_EMPs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_RELA_ROLE_EMPs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_RELA_ROLE_EMPs;
			}
			set
			{
				this._TB_RELA_ROLE_EMPs.Assign(value);
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_RELA_ROLE_MENU", Storage="_TB_RELA_ROLE_MENUs", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<TB_RELA_ROLE_MENU> TB_RELA_ROLE_MENUs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_RELA_ROLE_MENUs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_RELA_ROLE_MENUs;
			}
			set
			{
				this._TB_RELA_ROLE_MENUs.Assign(value);
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_RELA_ROLE_PAGE_ACTION", Storage="_TB_RELA_ROLE_PAGE_ACTIONs", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY")]
		[DataMember(Order=10, EmitDefaultValue=false)]
		public EntitySet<TB_RELA_ROLE_PAGE_ACTION> TB_RELA_ROLE_PAGE_ACTIONs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_RELA_ROLE_PAGE_ACTIONs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_RELA_ROLE_PAGE_ACTIONs;
			}
			set
			{
				this._TB_RELA_ROLE_PAGE_ACTIONs.Assign(value);
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_AUTHEN_APPLICATION", Storage="_TB_AUTHEN_APPLICATIONs", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<TB_AUTHEN_APPLICATION> TB_AUTHEN_APPLICATIONs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_AUTHEN_APPLICATIONs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_AUTHEN_APPLICATIONs;
			}
			set
			{
				this._TB_AUTHEN_APPLICATIONs.Assign(value);
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_CATEGORY_TB_AUTHO_ROLE", Storage="_TB_AUTHO_ROLE_CATEGORY", ThisKey="ROLE_CATEGORY_KEY", OtherKey="ROLE_CATEGORY_KEY", IsForeignKey=true)]
		public TB_AUTHO_ROLE_CATEGORY TB_AUTHO_ROLE_CATEGORY
		{
			get
			{
				return this._TB_AUTHO_ROLE_CATEGORY.Entity;
			}
			set
			{
				TB_AUTHO_ROLE_CATEGORY previousValue = this._TB_AUTHO_ROLE_CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._TB_AUTHO_ROLE_CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_AUTHO_ROLE_CATEGORY.Entity = null;
						previousValue.TB_AUTHO_ROLEs.Remove(this);
					}
					this._TB_AUTHO_ROLE_CATEGORY.Entity = value;
					if ((value != null))
					{
						value.TB_AUTHO_ROLEs.Add(this);
						this._ROLE_CATEGORY_KEY = value.ROLE_CATEGORY_KEY;
					}
					else
					{
						this._ROLE_CATEGORY_KEY = default(int);
					}
					this.SendPropertyChanged("TB_AUTHO_ROLE_CATEGORY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_RELA_ROLE_CIFs(TB_RELA_ROLE_CIF entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = this;
		}
		
		private void detach_TB_RELA_ROLE_CIFs(TB_RELA_ROLE_CIF entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = null;
		}
		
		private void attach_TB_RELA_ROLE_EMPs(TB_RELA_ROLE_EMP entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = this;
		}
		
		private void detach_TB_RELA_ROLE_EMPs(TB_RELA_ROLE_EMP entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = null;
		}
		
		private void attach_TB_RELA_ROLE_MENUs(TB_RELA_ROLE_MENU entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = this;
		}
		
		private void detach_TB_RELA_ROLE_MENUs(TB_RELA_ROLE_MENU entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = null;
		}
		
		private void attach_TB_RELA_ROLE_PAGE_ACTIONs(TB_RELA_ROLE_PAGE_ACTION entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = this;
		}
		
		private void detach_TB_RELA_ROLE_PAGE_ACTIONs(TB_RELA_ROLE_PAGE_ACTION entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = null;
		}
		
		private void attach_TB_AUTHEN_APPLICATIONs(TB_AUTHEN_APPLICATION entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = this;
		}
		
		private void detach_TB_AUTHEN_APPLICATIONs(TB_AUTHEN_APPLICATION entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE = null;
		}
		
		private void Initialize()
		{
			this._TB_RELA_ROLE_CIFs = new EntitySet<TB_RELA_ROLE_CIF>(new Action<TB_RELA_ROLE_CIF>(this.attach_TB_RELA_ROLE_CIFs), new Action<TB_RELA_ROLE_CIF>(this.detach_TB_RELA_ROLE_CIFs));
			this._TB_RELA_ROLE_EMPs = new EntitySet<TB_RELA_ROLE_EMP>(new Action<TB_RELA_ROLE_EMP>(this.attach_TB_RELA_ROLE_EMPs), new Action<TB_RELA_ROLE_EMP>(this.detach_TB_RELA_ROLE_EMPs));
			this._TB_RELA_ROLE_MENUs = new EntitySet<TB_RELA_ROLE_MENU>(new Action<TB_RELA_ROLE_MENU>(this.attach_TB_RELA_ROLE_MENUs), new Action<TB_RELA_ROLE_MENU>(this.detach_TB_RELA_ROLE_MENUs));
			this._TB_RELA_ROLE_PAGE_ACTIONs = new EntitySet<TB_RELA_ROLE_PAGE_ACTION>(new Action<TB_RELA_ROLE_PAGE_ACTION>(this.attach_TB_RELA_ROLE_PAGE_ACTIONs), new Action<TB_RELA_ROLE_PAGE_ACTION>(this.detach_TB_RELA_ROLE_PAGE_ACTIONs));
			this._TB_AUTHEN_APPLICATIONs = new EntitySet<TB_AUTHEN_APPLICATION>(new Action<TB_AUTHEN_APPLICATION>(this.attach_TB_AUTHEN_APPLICATIONs), new Action<TB_AUTHEN_APPLICATION>(this.detach_TB_AUTHEN_APPLICATIONs));
			this._TB_AUTHO_ROLE_CATEGORY = default(EntityRef<TB_AUTHO_ROLE_CATEGORY>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[DataContract()]
	public partial class ROLE : TB_AUTHO_ROLE
	{
		
		private string _ROLE_CATEGORY_DESC;
		
		private System.Nullable<int> _ROLE_CATEGORY_PRIORITY;
		
		private System.Nullable<bool> _ROLE_CATEGORY_DEL_FLAG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROLE_CATEGORY_DESCChanging(string value);
    partial void OnROLE_CATEGORY_DESCChanged();
    partial void OnROLE_CATEGORY_PRIORITYChanging(System.Nullable<int> value);
    partial void OnROLE_CATEGORY_PRIORITYChanged();
    partial void OnROLE_CATEGORY_DEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnROLE_CATEGORY_DEL_FLAGChanged();
    #endregion
		
		public ROLE()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ROLE_CATEGORY_DESC", CanBeNull=false)]
		[DataMember(Order=1)]
		public string ROLE_CATEGORY_DESC
		{
			get
			{
				return this._ROLE_CATEGORY_DESC;
			}
			set
			{
				if ((this._ROLE_CATEGORY_DESC != value))
				{
					this.OnROLE_CATEGORY_DESCChanging(value);
					this.SendPropertyChanging();
					this._ROLE_CATEGORY_DESC = value;
					this.SendPropertyChanged("ROLE_CATEGORY_DESC");
					this.OnROLE_CATEGORY_DESCChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_CATEGORY_PRIORITY")]
		[DataMember(Order=2)]
		public System.Nullable<int> ROLE_CATEGORY_PRIORITY
		{
			get
			{
				return this._ROLE_CATEGORY_PRIORITY;
			}
			set
			{
				if ((this._ROLE_CATEGORY_PRIORITY != value))
				{
					this.OnROLE_CATEGORY_PRIORITYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_CATEGORY_PRIORITY = value;
					this.SendPropertyChanged("ROLE_CATEGORY_PRIORITY");
					this.OnROLE_CATEGORY_PRIORITYChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_CATEGORY_DEL_FLAG")]
		[DataMember(Order=3)]
		public System.Nullable<bool> ROLE_CATEGORY_DEL_FLAG
		{
			get
			{
				return this._ROLE_CATEGORY_DEL_FLAG;
			}
			set
			{
				if ((this._ROLE_CATEGORY_DEL_FLAG != value))
				{
					this.OnROLE_CATEGORY_DEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._ROLE_CATEGORY_DEL_FLAG = value;
					this.SendPropertyChanged("ROLE_CATEGORY_DEL_FLAG");
					this.OnROLE_CATEGORY_DEL_FLAGChanged();
				}
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public new void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.TB_AUTHO_ROLE_CATEGORY")]
	[DataContract()]
	public partial class TB_AUTHO_ROLE_CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ROLE_CATEGORY_KEY;
		
		private string _ROLE_CATEGORY_DESC;
		
		private System.Nullable<int> _PRIORITY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntitySet<TB_AUTHO_ROLE> _TB_AUTHO_ROLEs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROLE_CATEGORY_KEYChanging(int value);
    partial void OnROLE_CATEGORY_KEYChanged();
    partial void OnROLE_CATEGORY_DESCChanging(string value);
    partial void OnROLE_CATEGORY_DESCChanged();
    partial void OnPRIORITYChanging(System.Nullable<int> value);
    partial void OnPRIORITYChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_AUTHO_ROLE_CATEGORY()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ROLE_CATEGORY_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ROLE_CATEGORY_KEY
		{
			get
			{
				return this._ROLE_CATEGORY_KEY;
			}
			set
			{
				if ((this._ROLE_CATEGORY_KEY != value))
				{
					this.OnROLE_CATEGORY_KEYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_CATEGORY_KEY = value;
					this.SendPropertyChanged("ROLE_CATEGORY_KEY");
					this.OnROLE_CATEGORY_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_CATEGORY_DESC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string ROLE_CATEGORY_DESC
		{
			get
			{
				return this._ROLE_CATEGORY_DESC;
			}
			set
			{
				if ((this._ROLE_CATEGORY_DESC != value))
				{
					this.OnROLE_CATEGORY_DESCChanging(value);
					this.SendPropertyChanging();
					this._ROLE_CATEGORY_DESC = value;
					this.SendPropertyChanged("ROLE_CATEGORY_DESC");
					this.OnROLE_CATEGORY_DESCChanged();
				}
			}
		}
		
		[Column(Storage="_PRIORITY", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> PRIORITY
		{
			get
			{
				return this._PRIORITY;
			}
			set
			{
				if ((this._PRIORITY != value))
				{
					this.OnPRIORITYChanging(value);
					this.SendPropertyChanging();
					this._PRIORITY = value;
					this.SendPropertyChanged("PRIORITY");
					this.OnPRIORITYChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_CATEGORY_TB_AUTHO_ROLE", Storage="_TB_AUTHO_ROLEs", ThisKey="ROLE_CATEGORY_KEY", OtherKey="ROLE_CATEGORY_KEY")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<TB_AUTHO_ROLE> TB_AUTHO_ROLEs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_AUTHO_ROLEs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_AUTHO_ROLEs;
			}
			set
			{
				this._TB_AUTHO_ROLEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_AUTHO_ROLEs(TB_AUTHO_ROLE entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE_CATEGORY = this;
		}
		
		private void detach_TB_AUTHO_ROLEs(TB_AUTHO_ROLE entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_ROLE_CATEGORY = null;
		}
		
		private void Initialize()
		{
			this._TB_AUTHO_ROLEs = new EntitySet<TB_AUTHO_ROLE>(new Action<TB_AUTHO_ROLE>(this.attach_TB_AUTHO_ROLEs), new Action<TB_AUTHO_ROLE>(this.detach_TB_AUTHO_ROLEs));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TB_AUTHO_USER")]
	[DataContract()]
	public partial class TB_AUTHO_USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EMP_ID;
		
		private string _EMP_TITLE;
		
		private string _EMP_NAME;
		
		private string _EMP_SURNAME;
		
		private string _EMP_TITLE_E;
		
		private string _EMP_NAME_E;
		
		private string _EMP_SURNAME_E;
		
		private string _PASSWD;
		
		private string _EMAIL;
		
		private System.DateTime _CREATE_DATE;
		
		private System.DateTime _EXPIRE_DATE;
		
		private System.DateTime _UPDATE_DATE;
		
		private System.Nullable<System.DateTime> _LAST_SIGN_ON_DATE;
		
		private System.Nullable<System.DateTime> _LAST_CHANGE_PASS_DATE;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntitySet<TB_RELA_ROLE_EMP> _TB_RELA_ROLE_EMPs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMP_IDChanging(string value);
    partial void OnEMP_IDChanged();
    partial void OnEMP_TITLEChanging(string value);
    partial void OnEMP_TITLEChanged();
    partial void OnEMP_NAMEChanging(string value);
    partial void OnEMP_NAMEChanged();
    partial void OnEMP_SURNAMEChanging(string value);
    partial void OnEMP_SURNAMEChanged();
    partial void OnEMP_TITLE_EChanging(string value);
    partial void OnEMP_TITLE_EChanged();
    partial void OnEMP_NAME_EChanging(string value);
    partial void OnEMP_NAME_EChanged();
    partial void OnEMP_SURNAME_EChanging(string value);
    partial void OnEMP_SURNAME_EChanged();
    partial void OnPASSWDChanging(string value);
    partial void OnPASSWDChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    partial void OnEXPIRE_DATEChanging(System.DateTime value);
    partial void OnEXPIRE_DATEChanged();
    partial void OnUPDATE_DATEChanging(System.DateTime value);
    partial void OnUPDATE_DATEChanged();
    partial void OnLAST_SIGN_ON_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnLAST_SIGN_ON_DATEChanged();
    partial void OnLAST_CHANGE_PASS_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnLAST_CHANGE_PASS_DATEChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_AUTHO_USER()
		{
			this.Initialize();
		}
		
		[Column(Storage="_EMP_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string EMP_ID
		{
			get
			{
				return this._EMP_ID;
			}
			set
			{
				if ((this._EMP_ID != value))
				{
					this.OnEMP_IDChanging(value);
					this.SendPropertyChanging();
					this._EMP_ID = value;
					this.SendPropertyChanged("EMP_ID");
					this.OnEMP_IDChanged();
				}
			}
		}
		
		[Column(Storage="_EMP_TITLE", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string EMP_TITLE
		{
			get
			{
				return this._EMP_TITLE;
			}
			set
			{
				if ((this._EMP_TITLE != value))
				{
					this.OnEMP_TITLEChanging(value);
					this.SendPropertyChanging();
					this._EMP_TITLE = value;
					this.SendPropertyChanged("EMP_TITLE");
					this.OnEMP_TITLEChanged();
				}
			}
		}
		
		[Column(Storage="_EMP_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string EMP_NAME
		{
			get
			{
				return this._EMP_NAME;
			}
			set
			{
				if ((this._EMP_NAME != value))
				{
					this.OnEMP_NAMEChanging(value);
					this.SendPropertyChanging();
					this._EMP_NAME = value;
					this.SendPropertyChanged("EMP_NAME");
					this.OnEMP_NAMEChanged();
				}
			}
		}
		
		[Column(Storage="_EMP_SURNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string EMP_SURNAME
		{
			get
			{
				return this._EMP_SURNAME;
			}
			set
			{
				if ((this._EMP_SURNAME != value))
				{
					this.OnEMP_SURNAMEChanging(value);
					this.SendPropertyChanging();
					this._EMP_SURNAME = value;
					this.SendPropertyChanged("EMP_SURNAME");
					this.OnEMP_SURNAMEChanged();
				}
			}
		}
		
		[Column(Storage="_EMP_TITLE_E", DbType="NVarChar(20)")]
		[DataMember(Order=5)]
		public string EMP_TITLE_E
		{
			get
			{
				return this._EMP_TITLE_E;
			}
			set
			{
				if ((this._EMP_TITLE_E != value))
				{
					this.OnEMP_TITLE_EChanging(value);
					this.SendPropertyChanging();
					this._EMP_TITLE_E = value;
					this.SendPropertyChanged("EMP_TITLE_E");
					this.OnEMP_TITLE_EChanged();
				}
			}
		}
		
		[Column(Storage="_EMP_NAME_E", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string EMP_NAME_E
		{
			get
			{
				return this._EMP_NAME_E;
			}
			set
			{
				if ((this._EMP_NAME_E != value))
				{
					this.OnEMP_NAME_EChanging(value);
					this.SendPropertyChanging();
					this._EMP_NAME_E = value;
					this.SendPropertyChanged("EMP_NAME_E");
					this.OnEMP_NAME_EChanged();
				}
			}
		}
		
		[Column(Storage="_EMP_SURNAME_E", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string EMP_SURNAME_E
		{
			get
			{
				return this._EMP_SURNAME_E;
			}
			set
			{
				if ((this._EMP_SURNAME_E != value))
				{
					this.OnEMP_SURNAME_EChanging(value);
					this.SendPropertyChanging();
					this._EMP_SURNAME_E = value;
					this.SendPropertyChanged("EMP_SURNAME_E");
					this.OnEMP_SURNAME_EChanged();
				}
			}
		}
		
		[Column(Storage="_PASSWD", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string PASSWD
		{
			get
			{
				return this._PASSWD;
			}
			set
			{
				if ((this._PASSWD != value))
				{
					this.OnPASSWDChanging(value);
					this.SendPropertyChanging();
					this._PASSWD = value;
					this.SendPropertyChanged("PASSWD");
					this.OnPASSWDChanged();
				}
			}
		}
		
		[Column(Storage="_EMAIL", DbType="NVarChar(50)")]
		[DataMember(Order=9)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[Column(Storage="_CREATE_DATE", DbType="DateTime NOT NULL")]
		[DataMember(Order=10)]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[Column(Storage="_EXPIRE_DATE", DbType="DateTime NOT NULL")]
		[DataMember(Order=11)]
		public System.DateTime EXPIRE_DATE
		{
			get
			{
				return this._EXPIRE_DATE;
			}
			set
			{
				if ((this._EXPIRE_DATE != value))
				{
					this.OnEXPIRE_DATEChanging(value);
					this.SendPropertyChanging();
					this._EXPIRE_DATE = value;
					this.SendPropertyChanged("EXPIRE_DATE");
					this.OnEXPIRE_DATEChanged();
				}
			}
		}
		
		[Column(Storage="_UPDATE_DATE", DbType="DateTime NOT NULL")]
		[DataMember(Order=12)]
		public System.DateTime UPDATE_DATE
		{
			get
			{
				return this._UPDATE_DATE;
			}
			set
			{
				if ((this._UPDATE_DATE != value))
				{
					this.OnUPDATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATE_DATE = value;
					this.SendPropertyChanged("UPDATE_DATE");
					this.OnUPDATE_DATEChanged();
				}
			}
		}
		
		[Column(Storage="_LAST_SIGN_ON_DATE", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> LAST_SIGN_ON_DATE
		{
			get
			{
				return this._LAST_SIGN_ON_DATE;
			}
			set
			{
				if ((this._LAST_SIGN_ON_DATE != value))
				{
					this.OnLAST_SIGN_ON_DATEChanging(value);
					this.SendPropertyChanging();
					this._LAST_SIGN_ON_DATE = value;
					this.SendPropertyChanged("LAST_SIGN_ON_DATE");
					this.OnLAST_SIGN_ON_DATEChanged();
				}
			}
		}
		
		[Column(Storage="_LAST_CHANGE_PASS_DATE", DbType="DateTime")]
		[DataMember(Order=14)]
		public System.Nullable<System.DateTime> LAST_CHANGE_PASS_DATE
		{
			get
			{
				return this._LAST_CHANGE_PASS_DATE;
			}
			set
			{
				if ((this._LAST_CHANGE_PASS_DATE != value))
				{
					this.OnLAST_CHANGE_PASS_DATEChanging(value);
					this.SendPropertyChanging();
					this._LAST_CHANGE_PASS_DATE = value;
					this.SendPropertyChanged("LAST_CHANGE_PASS_DATE");
					this.OnLAST_CHANGE_PASS_DATEChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=15)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_AUTHO_USER_TB_RELA_ROLE_EMP", Storage="_TB_RELA_ROLE_EMPs", ThisKey="EMP_ID", OtherKey="EMP_ID")]
		[DataMember(Order=16, EmitDefaultValue=false)]
		public EntitySet<TB_RELA_ROLE_EMP> TB_RELA_ROLE_EMPs
		{
			get
			{
				if ((this.serializing 
							&& (this._TB_RELA_ROLE_EMPs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TB_RELA_ROLE_EMPs;
			}
			set
			{
				this._TB_RELA_ROLE_EMPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_RELA_ROLE_EMPs(TB_RELA_ROLE_EMP entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_USER = this;
		}
		
		private void detach_TB_RELA_ROLE_EMPs(TB_RELA_ROLE_EMP entity)
		{
			this.SendPropertyChanging();
			entity.TB_AUTHO_USER = null;
		}
		
		private void Initialize()
		{
			this._TB_RELA_ROLE_EMPs = new EntitySet<TB_RELA_ROLE_EMP>(new Action<TB_RELA_ROLE_EMP>(this.attach_TB_RELA_ROLE_EMPs), new Action<TB_RELA_ROLE_EMP>(this.detach_TB_RELA_ROLE_EMPs));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.V_RoleInCus_Mapping")]
	[DataContract()]
	public partial class V_RoleInCus_Mapping
	{
		
		private int _ID;
		
		private int _CIF;
		
		private int _ROLE_KEY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		public V_RoleInCus_Mapping()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_CIF", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int CIF
		{
			get
			{
				return this._CIF;
			}
			set
			{
				if ((this._CIF != value))
				{
					this._CIF = value;
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					this._ROLE_KEY = value;
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this._DEL_FLAG = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.V_RoleInEmp_Mapping")]
	[DataContract()]
	public partial class V_RoleInEmp_Mapping
	{
		
		private int _ID;
		
		private string _EMP_ID;
		
		private int _ROLE_KEY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		public V_RoleInEmp_Mapping()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_EMP_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string EMP_ID
		{
			get
			{
				return this._EMP_ID;
			}
			set
			{
				if ((this._EMP_ID != value))
				{
					this._EMP_ID = value;
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					this._ROLE_KEY = value;
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this._DEL_FLAG = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.V_RoleInMenu_Mapping")]
	[DataContract()]
	public partial class V_RoleInMenu_Mapping
	{
		
		private int _ID;
		
		private System.Nullable<int> _MENU_KEY;
		
		private int _ROLE_KEY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		public V_RoleInMenu_Mapping()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_MENU_KEY", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> MENU_KEY
		{
			get
			{
				return this._MENU_KEY;
			}
			set
			{
				if ((this._MENU_KEY != value))
				{
					this._MENU_KEY = value;
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					this._ROLE_KEY = value;
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this._DEL_FLAG = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.V_RoleInPageAndAction_Mapping")]
	[DataContract()]
	public partial class V_RoleInPageAndAction_Mapping
	{
		
		private int _ID;
		
		private int _PAGE_KEY;
		
		private int _ACTION_KEY;
		
		private int _ROLE_KEY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		public V_RoleInPageAndAction_Mapping()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_PAGE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int PAGE_KEY
		{
			get
			{
				return this._PAGE_KEY;
			}
			set
			{
				if ((this._PAGE_KEY != value))
				{
					this._PAGE_KEY = value;
				}
			}
		}
		
		[Column(Storage="_ACTION_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int ACTION_KEY
		{
			get
			{
				return this._ACTION_KEY;
			}
			set
			{
				if ((this._ACTION_KEY != value))
				{
					this._ACTION_KEY = value;
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					this._ROLE_KEY = value;
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=5)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this._DEL_FLAG = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.V_RoleInApp_Mapping")]
	[DataContract()]
	public partial class V_RoleInApp_Mapping
	{
		
		private int _ID;
		
		private int _ROLE_KEY;
		
		private int _APP_KEY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		public V_RoleInApp_Mapping()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					this._ROLE_KEY = value;
				}
			}
		}
		
		[Column(Storage="_APP_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int APP_KEY
		{
			get
			{
				return this._APP_KEY;
			}
			set
			{
				if ((this._APP_KEY != value))
				{
					this._APP_KEY = value;
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this._DEL_FLAG = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TB_RELA_ROLE_CIF")]
	[DataContract()]
	public partial class TB_RELA_ROLE_CIF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ROLE_KEY;
		
		private int _CIF;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntityRef<TB_AUTHO_ROLE> _TB_AUTHO_ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnROLE_KEYChanging(int value);
    partial void OnROLE_KEYChanged();
    partial void OnCIFChanging(int value);
    partial void OnCIFChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_RELA_ROLE_CIF()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					if (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLE_KEYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_KEY = value;
					this.SendPropertyChanged("ROLE_KEY");
					this.OnROLE_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_CIF", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int CIF
		{
			get
			{
				return this._CIF;
			}
			set
			{
				if ((this._CIF != value))
				{
					this.OnCIFChanging(value);
					this.SendPropertyChanging();
					this._CIF = value;
					this.SendPropertyChanged("CIF");
					this.OnCIFChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_RELA_ROLE_CIF", Storage="_TB_AUTHO_ROLE", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY", IsForeignKey=true)]
		public TB_AUTHO_ROLE TB_AUTHO_ROLE
		{
			get
			{
				return this._TB_AUTHO_ROLE.Entity;
			}
			set
			{
				TB_AUTHO_ROLE previousValue = this._TB_AUTHO_ROLE.Entity;
				if (((previousValue != value) 
							|| (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_AUTHO_ROLE.Entity = null;
						previousValue.TB_RELA_ROLE_CIFs.Remove(this);
					}
					this._TB_AUTHO_ROLE.Entity = value;
					if ((value != null))
					{
						value.TB_RELA_ROLE_CIFs.Add(this);
						this._ROLE_KEY = value.ROLE_KEY;
					}
					else
					{
						this._ROLE_KEY = default(int);
					}
					this.SendPropertyChanged("TB_AUTHO_ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._TB_AUTHO_ROLE = default(EntityRef<TB_AUTHO_ROLE>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.TB_RELA_ROLE_EMP")]
	[DataContract()]
	public partial class TB_RELA_ROLE_EMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ROLE_KEY;
		
		private string _EMP_ID;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntityRef<TB_AUTHO_ROLE> _TB_AUTHO_ROLE;
		
		private EntityRef<TB_AUTHO_USER> _TB_AUTHO_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnROLE_KEYChanging(int value);
    partial void OnROLE_KEYChanged();
    partial void OnEMP_IDChanging(string value);
    partial void OnEMP_IDChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_RELA_ROLE_EMP()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					if (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLE_KEYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_KEY = value;
					this.SendPropertyChanged("ROLE_KEY");
					this.OnROLE_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_EMP_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string EMP_ID
		{
			get
			{
				return this._EMP_ID;
			}
			set
			{
				if ((this._EMP_ID != value))
				{
					if (this._TB_AUTHO_USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMP_IDChanging(value);
					this.SendPropertyChanging();
					this._EMP_ID = value;
					this.SendPropertyChanged("EMP_ID");
					this.OnEMP_IDChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_RELA_ROLE_EMP", Storage="_TB_AUTHO_ROLE", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY", IsForeignKey=true)]
		public TB_AUTHO_ROLE TB_AUTHO_ROLE
		{
			get
			{
				return this._TB_AUTHO_ROLE.Entity;
			}
			set
			{
				TB_AUTHO_ROLE previousValue = this._TB_AUTHO_ROLE.Entity;
				if (((previousValue != value) 
							|| (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_AUTHO_ROLE.Entity = null;
						previousValue.TB_RELA_ROLE_EMPs.Remove(this);
					}
					this._TB_AUTHO_ROLE.Entity = value;
					if ((value != null))
					{
						value.TB_RELA_ROLE_EMPs.Add(this);
						this._ROLE_KEY = value.ROLE_KEY;
					}
					else
					{
						this._ROLE_KEY = default(int);
					}
					this.SendPropertyChanged("TB_AUTHO_ROLE");
				}
			}
		}
		
		[Association(Name="TB_AUTHO_USER_TB_RELA_ROLE_EMP", Storage="_TB_AUTHO_USER", ThisKey="EMP_ID", OtherKey="EMP_ID", IsForeignKey=true)]
		public TB_AUTHO_USER TB_AUTHO_USER
		{
			get
			{
				return this._TB_AUTHO_USER.Entity;
			}
			set
			{
				TB_AUTHO_USER previousValue = this._TB_AUTHO_USER.Entity;
				if (((previousValue != value) 
							|| (this._TB_AUTHO_USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_AUTHO_USER.Entity = null;
						previousValue.TB_RELA_ROLE_EMPs.Remove(this);
					}
					this._TB_AUTHO_USER.Entity = value;
					if ((value != null))
					{
						value.TB_RELA_ROLE_EMPs.Add(this);
						this._EMP_ID = value.EMP_ID;
					}
					else
					{
						this._EMP_ID = default(string);
					}
					this.SendPropertyChanged("TB_AUTHO_USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._TB_AUTHO_ROLE = default(EntityRef<TB_AUTHO_ROLE>);
			this._TB_AUTHO_USER = default(EntityRef<TB_AUTHO_USER>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.TB_RELA_ROLE_MENU")]
	[DataContract()]
	public partial class TB_RELA_ROLE_MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ROLE_KEY;
		
		private System.Nullable<int> _MENU_KEY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntityRef<TB_AUTHO_ROLE> _TB_AUTHO_ROLE;
		
		private EntityRef<TB_MENU> _TB_MENU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnROLE_KEYChanging(System.Nullable<int> value);
    partial void OnROLE_KEYChanged();
    partial void OnMENU_KEYChanging(System.Nullable<int> value);
    partial void OnMENU_KEYChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_RELA_ROLE_MENU()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					if (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLE_KEYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_KEY = value;
					this.SendPropertyChanged("ROLE_KEY");
					this.OnROLE_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_MENU_KEY", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> MENU_KEY
		{
			get
			{
				return this._MENU_KEY;
			}
			set
			{
				if ((this._MENU_KEY != value))
				{
					if (this._TB_MENU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMENU_KEYChanging(value);
					this.SendPropertyChanging();
					this._MENU_KEY = value;
					this.SendPropertyChanged("MENU_KEY");
					this.OnMENU_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_RELA_ROLE_MENU", Storage="_TB_AUTHO_ROLE", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY", IsForeignKey=true)]
		public TB_AUTHO_ROLE TB_AUTHO_ROLE
		{
			get
			{
				return this._TB_AUTHO_ROLE.Entity;
			}
			set
			{
				TB_AUTHO_ROLE previousValue = this._TB_AUTHO_ROLE.Entity;
				if (((previousValue != value) 
							|| (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_AUTHO_ROLE.Entity = null;
						previousValue.TB_RELA_ROLE_MENUs.Remove(this);
					}
					this._TB_AUTHO_ROLE.Entity = value;
					if ((value != null))
					{
						value.TB_RELA_ROLE_MENUs.Add(this);
						this._ROLE_KEY = value.ROLE_KEY;
					}
					else
					{
						this._ROLE_KEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_AUTHO_ROLE");
				}
			}
		}
		
		[Association(Name="TB_MENU_TB_RELA_ROLE_MENU", Storage="_TB_MENU", ThisKey="MENU_KEY", OtherKey="MENU_KEY", IsForeignKey=true)]
		public TB_MENU TB_MENU
		{
			get
			{
				return this._TB_MENU.Entity;
			}
			set
			{
				TB_MENU previousValue = this._TB_MENU.Entity;
				if (((previousValue != value) 
							|| (this._TB_MENU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_MENU.Entity = null;
						previousValue.TB_RELA_ROLE_MENUs.Remove(this);
					}
					this._TB_MENU.Entity = value;
					if ((value != null))
					{
						value.TB_RELA_ROLE_MENUs.Add(this);
						this._MENU_KEY = value.MENU_KEY;
					}
					else
					{
						this._MENU_KEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_MENU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._TB_AUTHO_ROLE = default(EntityRef<TB_AUTHO_ROLE>);
			this._TB_MENU = default(EntityRef<TB_MENU>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.TB_RELA_ROLE_PAGE_ACTION")]
	[DataContract()]
	public partial class TB_RELA_ROLE_PAGE_ACTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ROLE_KEY;
		
		private int _PAGE_KEY;
		
		private int _ACTION_KEY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntityRef<TB_AUTHO_ACTION> _TB_AUTHO_ACTION;
		
		private EntityRef<TB_AUTHO_PAGE> _TB_AUTHO_PAGE;
		
		private EntityRef<TB_AUTHO_ROLE> _TB_AUTHO_ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnROLE_KEYChanging(int value);
    partial void OnROLE_KEYChanged();
    partial void OnPAGE_KEYChanging(int value);
    partial void OnPAGE_KEYChanged();
    partial void OnACTION_KEYChanging(int value);
    partial void OnACTION_KEYChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_RELA_ROLE_PAGE_ACTION()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					if (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLE_KEYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_KEY = value;
					this.SendPropertyChanged("ROLE_KEY");
					this.OnROLE_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_PAGE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int PAGE_KEY
		{
			get
			{
				return this._PAGE_KEY;
			}
			set
			{
				if ((this._PAGE_KEY != value))
				{
					if (this._TB_AUTHO_PAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAGE_KEYChanging(value);
					this.SendPropertyChanging();
					this._PAGE_KEY = value;
					this.SendPropertyChanged("PAGE_KEY");
					this.OnPAGE_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_ACTION_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int ACTION_KEY
		{
			get
			{
				return this._ACTION_KEY;
			}
			set
			{
				if ((this._ACTION_KEY != value))
				{
					if (this._TB_AUTHO_ACTION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACTION_KEYChanging(value);
					this.SendPropertyChanging();
					this._ACTION_KEY = value;
					this.SendPropertyChanged("ACTION_KEY");
					this.OnACTION_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=5)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_AUTHO_ACTION_TB_RELA_ROLE_PAGE_ACTION", Storage="_TB_AUTHO_ACTION", ThisKey="ACTION_KEY", OtherKey="ACTION_KEY", IsForeignKey=true)]
		public TB_AUTHO_ACTION TB_AUTHO_ACTION
		{
			get
			{
				return this._TB_AUTHO_ACTION.Entity;
			}
			set
			{
				TB_AUTHO_ACTION previousValue = this._TB_AUTHO_ACTION.Entity;
				if (((previousValue != value) 
							|| (this._TB_AUTHO_ACTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_AUTHO_ACTION.Entity = null;
						previousValue.TB_RELA_ROLE_PAGE_ACTIONs.Remove(this);
					}
					this._TB_AUTHO_ACTION.Entity = value;
					if ((value != null))
					{
						value.TB_RELA_ROLE_PAGE_ACTIONs.Add(this);
						this._ACTION_KEY = value.ACTION_KEY;
					}
					else
					{
						this._ACTION_KEY = default(int);
					}
					this.SendPropertyChanged("TB_AUTHO_ACTION");
				}
			}
		}
		
		[Association(Name="TB_AUTHO_PAGE_TB_RELA_ROLE_PAGE_ACTION", Storage="_TB_AUTHO_PAGE", ThisKey="PAGE_KEY", OtherKey="PAGE_KEY", IsForeignKey=true)]
		public TB_AUTHO_PAGE TB_AUTHO_PAGE
		{
			get
			{
				return this._TB_AUTHO_PAGE.Entity;
			}
			set
			{
				TB_AUTHO_PAGE previousValue = this._TB_AUTHO_PAGE.Entity;
				if (((previousValue != value) 
							|| (this._TB_AUTHO_PAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_AUTHO_PAGE.Entity = null;
						previousValue.TB_RELA_ROLE_PAGE_ACTIONs.Remove(this);
					}
					this._TB_AUTHO_PAGE.Entity = value;
					if ((value != null))
					{
						value.TB_RELA_ROLE_PAGE_ACTIONs.Add(this);
						this._PAGE_KEY = value.PAGE_KEY;
					}
					else
					{
						this._PAGE_KEY = default(int);
					}
					this.SendPropertyChanged("TB_AUTHO_PAGE");
				}
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_RELA_ROLE_PAGE_ACTION", Storage="_TB_AUTHO_ROLE", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY", IsForeignKey=true)]
		public TB_AUTHO_ROLE TB_AUTHO_ROLE
		{
			get
			{
				return this._TB_AUTHO_ROLE.Entity;
			}
			set
			{
				TB_AUTHO_ROLE previousValue = this._TB_AUTHO_ROLE.Entity;
				if (((previousValue != value) 
							|| (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_AUTHO_ROLE.Entity = null;
						previousValue.TB_RELA_ROLE_PAGE_ACTIONs.Remove(this);
					}
					this._TB_AUTHO_ROLE.Entity = value;
					if ((value != null))
					{
						value.TB_RELA_ROLE_PAGE_ACTIONs.Add(this);
						this._ROLE_KEY = value.ROLE_KEY;
					}
					else
					{
						this._ROLE_KEY = default(int);
					}
					this.SendPropertyChanged("TB_AUTHO_ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._TB_AUTHO_ACTION = default(EntityRef<TB_AUTHO_ACTION>);
			this._TB_AUTHO_PAGE = default(EntityRef<TB_AUTHO_PAGE>);
			this._TB_AUTHO_ROLE = default(EntityRef<TB_AUTHO_ROLE>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.TB_AUTHEN_APPLICATION")]
	[DataContract()]
	public partial class TB_AUTHEN_APPLICATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ROLE_KEY;
		
		private int _APP_KEY;
		
		private System.Nullable<bool> _DEL_FLAG;
		
		private EntityRef<TB_APPLICATION> _TB_APPLICATION;
		
		private EntityRef<TB_AUTHO_ROLE> _TB_AUTHO_ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnROLE_KEYChanging(int value);
    partial void OnROLE_KEYChanged();
    partial void OnAPP_KEYChanging(int value);
    partial void OnAPP_KEYChanged();
    partial void OnDEL_FLAGChanging(System.Nullable<bool> value);
    partial void OnDEL_FLAGChanged();
    #endregion
		
		public TB_AUTHEN_APPLICATION()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ROLE_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ROLE_KEY
		{
			get
			{
				return this._ROLE_KEY;
			}
			set
			{
				if ((this._ROLE_KEY != value))
				{
					if (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLE_KEYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_KEY = value;
					this.SendPropertyChanged("ROLE_KEY");
					this.OnROLE_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_APP_KEY", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int APP_KEY
		{
			get
			{
				return this._APP_KEY;
			}
			set
			{
				if ((this._APP_KEY != value))
				{
					if (this._TB_APPLICATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAPP_KEYChanging(value);
					this.SendPropertyChanging();
					this._APP_KEY = value;
					this.SendPropertyChanged("APP_KEY");
					this.OnAPP_KEYChanged();
				}
			}
		}
		
		[Column(Storage="_DEL_FLAG", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> DEL_FLAG
		{
			get
			{
				return this._DEL_FLAG;
			}
			set
			{
				if ((this._DEL_FLAG != value))
				{
					this.OnDEL_FLAGChanging(value);
					this.SendPropertyChanging();
					this._DEL_FLAG = value;
					this.SendPropertyChanged("DEL_FLAG");
					this.OnDEL_FLAGChanged();
				}
			}
		}
		
		[Association(Name="TB_APPLICATION_TB_AUTHEN_APPLICATION", Storage="_TB_APPLICATION", ThisKey="APP_KEY", OtherKey="APP_KEY", IsForeignKey=true)]
		public TB_APPLICATION TB_APPLICATION
		{
			get
			{
				return this._TB_APPLICATION.Entity;
			}
			set
			{
				TB_APPLICATION previousValue = this._TB_APPLICATION.Entity;
				if (((previousValue != value) 
							|| (this._TB_APPLICATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_APPLICATION.Entity = null;
						previousValue.TB_AUTHEN_APPLICATIONs.Remove(this);
					}
					this._TB_APPLICATION.Entity = value;
					if ((value != null))
					{
						value.TB_AUTHEN_APPLICATIONs.Add(this);
						this._APP_KEY = value.APP_KEY;
					}
					else
					{
						this._APP_KEY = default(int);
					}
					this.SendPropertyChanged("TB_APPLICATION");
				}
			}
		}
		
		[Association(Name="TB_AUTHO_ROLE_TB_AUTHEN_APPLICATION", Storage="_TB_AUTHO_ROLE", ThisKey="ROLE_KEY", OtherKey="ROLE_KEY", IsForeignKey=true)]
		public TB_AUTHO_ROLE TB_AUTHO_ROLE
		{
			get
			{
				return this._TB_AUTHO_ROLE.Entity;
			}
			set
			{
				TB_AUTHO_ROLE previousValue = this._TB_AUTHO_ROLE.Entity;
				if (((previousValue != value) 
							|| (this._TB_AUTHO_ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_AUTHO_ROLE.Entity = null;
						previousValue.TB_AUTHEN_APPLICATIONs.Remove(this);
					}
					this._TB_AUTHO_ROLE.Entity = value;
					if ((value != null))
					{
						value.TB_AUTHEN_APPLICATIONs.Add(this);
						this._ROLE_KEY = value.ROLE_KEY;
					}
					else
					{
						this._ROLE_KEY = default(int);
					}
					this.SendPropertyChanged("TB_AUTHO_ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._TB_APPLICATION = default(EntityRef<TB_APPLICATION>);
			this._TB_AUTHO_ROLE = default(EntityRef<TB_AUTHO_ROLE>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
